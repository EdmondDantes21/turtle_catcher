[0.024s] Invoking command in '/home/redi/ros2_ws/build/catch_turtles': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/redi/ros2_ws/install/my_py_pkg:/opt/ros/foxy /usr/bin/cmake --build /home/redi/ros2_ws/build/catch_turtles -- -j8 -l8
[0.096s] [35m[1mScanning dependencies of target turtle_controller[0m
[0.130s] [ 50%] Built target turtle_spawner
[0.142s] [ 75%] [32mBuilding CXX object CMakeFiles/turtle_controller.dir/src/turtle_controller.cpp.o[0m
[2.449s] [01m[K/home/redi/ros2_ws/src/catch_turtles/src/turtle_controller.cpp:[m[K In member function â€˜[01m[Kvoid TurtleControllerNode::turtleSpawnCallBack(my_robot_interfaces::msg::AliveTurtles)[m[Kâ€™:
[2.449s] [01m[K/home/redi/ros2_ws/src/catch_turtles/src/turtle_controller.cpp:106:75:[m[K [01;35m[Kwarning: [m[Kunused parameter â€˜[01m[Kmsg[m[Kâ€™ [[01;35m[K-Wunused-parameter[m[K]
[2.449s]   106 | [01;35m[Kinterfaces::msg::AliveTurtles msg[m[K) {
[2.449s]       | [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~[m[K
[2.449s] 
[3.002s] In file included from [01m[K/opt/ros/foxy/include/rclcpp/node_interfaces/node_topics_interface.hpp:32[m[K,
[3.002s]                  from [01m[K/opt/ros/foxy/include/rclcpp/node.hpp:55[m[K,
[3.002s]                  from [01m[K/opt/ros/foxy/include/rclcpp/executors/single_threaded_executor.hpp:28[m[K,
[3.002s]                  from [01m[K/opt/ros/foxy/include/rclcpp/executors.hpp:22[m[K,
[3.003s]                  from [01m[K/opt/ros/foxy/include/rclcpp/rclcpp.hpp:146[m[K,
[3.003s]                  from [01m[K/home/redi/ros2_ws/src/catch_turtles/src/turtle_controller.cpp:1[m[K:
[3.003s] /opt/ros/foxy/include/rclcpp/subscription_factory.hpp: In instantiation of â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT> >) [with MessageT = my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >; CallbackT = std::_Bind<void (TurtleControllerNode::*(TurtleControllerNode*, std::_Placeholder<1>))(my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; CallbackMessageT = my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™:
[3.003s] [01m[K/opt/ros/foxy/include/rclcpp/create_subscription.hpp:144:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<SubscriptionT> rclcpp::create_subscription(NodeT&&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >; CallbackT = std::_Bind<void (TurtleControllerNode::*(TurtleControllerNode*, std::_Placeholder<1>))(my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; CallbackMessageT = my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node&; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[3.003s] [01m[K/opt/ros/foxy/include/rclcpp/node_impl.hpp:98:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<SubscriptionT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >; CallbackT = std::_Bind<void (TurtleControllerNode::*(TurtleControllerNode*, std::_Placeholder<1>))(my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; CallbackMessageT = my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[3.003s] [01m[K/home/redi/ros2_ws/src/catch_turtles/src/turtle_controller.cpp:53:9:[m[K   required from here
[3.003s] [01m[K/opt/ros/foxy/include/rclcpp/subscription_factory.hpp:97:3:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Krclcpp::AnySubscriptionCallback<my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >, std::allocator<void> >::set(std::_Bind<void (TurtleControllerNode::*(TurtleControllerNode*, std::_Placeholder<1>))(my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >)>)[m[Kâ€™
[3.003s]    97 |   [01;31m[Kany_subscription_callback[m[K.set(std::forward<CallbackT>(callback));
[3.004s]       |   [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[3.004s] In file included from [01m[K/opt/ros/foxy/include/rclcpp/subscription_base.hpp:29[m[K,
[3.004s]                  from [01m[K/opt/ros/foxy/include/rclcpp/callback_group.hpp:26[m[K,
[3.004s]                  from [01m[K/opt/ros/foxy/include/rclcpp/any_executable.hpp:20[m[K,
[3.004s]                  from [01m[K/opt/ros/foxy/include/rclcpp/memory_strategy.hpp:24[m[K,
[3.004s]                  from [01m[K/opt/ros/foxy/include/rclcpp/memory_strategies.hpp:18[m[K,
[3.004s]                  from [01m[K/opt/ros/foxy/include/rclcpp/executor_options.hpp:20[m[K,
[3.004s]                  from [01m[K/opt/ros/foxy/include/rclcpp/executor.hpp:33[m[K,
[3.004s]                  from [01m[K/opt/ros/foxy/include/rclcpp/executors/multi_threaded_executor.hpp:26[m[K,
[3.005s]                  from [01m[K/opt/ros/foxy/include/rclcpp/executors.hpp:21[m[K,
[3.005s]                  from [01m[K/opt/ros/foxy/include/rclcpp/rclcpp.hpp:146[m[K,
[3.005s]                  from [01m[K/home/redi/ros2_ws/src/catch_turtles/src/turtle_controller.cpp:1[m[K:
[3.005s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:83:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> > >)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>)> >::value>::type* <anonymous> = <enumerator>; MessageT = my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >; Alloc = std::allocator<void>][m[Kâ€™
[3.005s]    83 |   void [01;36m[Kset[m[K(CallbackT callback)
[3.005s]       |        [01;36m[K^~~[m[K
[3.005s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:83:8:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[3.005s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:81:17:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[3.006s]    81 |     >::type * = [01;31m[Knullptr[m[K
[3.006s]       |                 [01;31m[K^~~~~~~[m[K
[3.006s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:97:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> > >, const rclcpp::MessageInfo&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<_Tp>, const rclcpp::MessageInfo&)> >::value>::type* <anonymous> = <enumerator>; MessageT = my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >; Alloc = std::allocator<void>][m[Kâ€™
[3.006s]    97 |   void [01;36m[Kset[m[K(CallbackT callback)
[3.006s]       |        [01;36m[K^~~[m[K
[3.006s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:97:8:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[3.006s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:95:17:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[3.006s]    95 |     >::type * = [01;31m[Knullptr[m[K
[3.006s]       |                 [01;31m[K^~~~~~~[m[K
[3.007s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:111:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> > >)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const _Tp>)> >::value>::type* <anonymous> = <enumerator>; MessageT = my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >; Alloc = std::allocator<void>][m[Kâ€™
[3.007s]   111 |   void [01;36m[Kset[m[K(CallbackT callback)
[3.007s]       |        [01;36m[K^~~[m[K
[3.007s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:111:8:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[3.007s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:109:17:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[3.007s]   109 |     >::type * = [01;31m[Knullptr[m[K
[3.007s]       |                 [01;31m[K^~~~~~~[m[K
[3.007s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:125:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> > >, const rclcpp::MessageInfo&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::shared_ptr<const _Tp>, const rclcpp::MessageInfo&)> >::value>::type* <anonymous> = <enumerator>; MessageT = my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >; Alloc = std::allocator<void>][m[Kâ€™
[3.007s]   125 |   void [01;36m[Kset[m[K(CallbackT callback)
[3.008s]       |        [01;36m[K^~~[m[K
[3.008s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:125:8:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[3.008s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:123:17:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[3.008s]   123 |     >::type * = [01;31m[Knullptr[m[K
[3.008s]       |                 [01;31m[K^~~~~~~[m[K
[3.008s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:139:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::unique_ptr<my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >, std::default_delete<my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> > > >)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::unique_ptr<MessageT, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type>)> >::value>::type* <anonymous> = <enumerator>; MessageT = my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >; Alloc = std::allocator<void>][m[Kâ€™
[3.008s]   139 |   void [01;36m[Kset[m[K(CallbackT callback)
[3.009s]       |        [01;36m[K^~~[m[K
[3.009s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:139:8:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[3.009s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:137:17:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[3.009s]   137 |     >::type * = [01;31m[Knullptr[m[K
[3.009s]       |                 [01;31m[K^~~~~~~[m[K
[3.009s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:153:8:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class CallbackT, typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::unique_ptr<my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >, std::default_delete<my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> > > >, const rclcpp::MessageInfo&)> >::value, void>::type* <anonymous> > void rclcpp::AnySubscriptionCallback<MessageT, Alloc>::set(CallbackT) [with CallbackT = CallbackT; typename std::enable_if<rclcpp::function_traits::same_arguments<CallbackT, std::function<void(std::unique_ptr<MessageT, typename std::conditional<std::is_same<typename std::allocator_traits<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type>::rebind_alloc<MessageT>, typename std::allocator<void>::rebind<_Tp1>::other>::value, std::default_delete<_Tp>, rclcpp::allocator::AllocatorDeleter<typename std::allocator_traits<_Alloc>::rebind_traits<MessageT>::allocator_type> >::type>, const rclcpp::MessageInfo&)> >::value>::type* <anonymous> = <enumerator>; MessageT = my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >; Alloc = std::allocator<void>][m[Kâ€™
[3.009s]   153 |   void [01;36m[Kset[m[K(CallbackT callback)
[3.009s]       |        [01;36m[K^~~[m[K
[3.009s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:153:8:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[3.010s] [01m[K/opt/ros/foxy/include/rclcpp/any_subscription_callback.hpp:151:17:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[3.010s]   151 |     >::type * = [01;31m[Knullptr[m[K
[3.010s]       |                 [01;31m[K^~~~~~~[m[K
[4.925s] In file included from [01m[K/usr/include/c++/9/future:48[m[K,
[4.925s]                  from [01m[K/opt/ros/foxy/include/rclcpp/executors.hpp:18[m[K,
[4.925s]                  from [01m[K/opt/ros/foxy/include/rclcpp/rclcpp.hpp:146[m[K,
[4.925s]                  from [01m[K/home/redi/ros2_ws/src/catch_turtles/src/turtle_controller.cpp:1[m[K:
[4.925s] [01m[K/usr/include/c++/9/bits/std_function.h:[m[K At global scope:
[4.925s] [01m[K/usr/include/c++/9/bits/std_function.h:667:7:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kstd::function<_Res(_ArgTypes ...)>::function(_Functor) [with _Functor = rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT> >) [with MessageT = my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >; CallbackT = std::_Bind<void (TurtleControllerNode::*(TurtleControllerNode*, std::_Placeholder<1>))(my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; CallbackMessageT = my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >, std::allocator<void> > >]::<lambda(rclcpp::node_interfaces::NodeBaseInterface*, const string&, const rclcpp::QoS&)>; <template-parameter-2-2> = void; <template-parameter-2-3> = void; _Res = std::shared_ptr<rclcpp::SubscriptionBase>; _ArgTypes = {rclcpp::node_interfaces::NodeBaseInterface*, const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, const rclcpp::QoS&}][m[Kâ€™, declared using local type â€˜[01m[Krclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<CallbackMessageT> >) [with MessageT = my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >; CallbackT = std::_Bind<void (TurtleControllerNode::*(TurtleControllerNode*, std::_Placeholder<1>))(my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >)>; AllocatorT = std::allocator<void>; CallbackMessageT = my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >; SubscriptionT = rclcpp::Subscription<my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >, std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<my_robot_interfaces::msg::AliveTurtles_<std::allocator<void> >, std::allocator<void> > >]::<lambda(rclcpp::node_interfaces::NodeBaseInterface*, const string&, const rclcpp::QoS&)>[m[Kâ€™, is used but never defined [[01;31m[K-fpermissive[m[K]
[4.925s]   667 |       [01;31m[Kfunction<_Res(_ArgTypes...)>[m[K::
[4.926s]       |       [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[5.337s] make[2]: *** [CMakeFiles/turtle_controller.dir/build.make:63: CMakeFiles/turtle_controller.dir/src/turtle_controller.cpp.o] Error 1
[5.337s] make[1]: *** [CMakeFiles/Makefile2:80: CMakeFiles/turtle_controller.dir/all] Error 2
[5.338s] make: *** [Makefile:141: all] Error 2
[5.341s] Invoked command in '/home/redi/ros2_ws/build/catch_turtles' returned '2': CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}:/home/redi/ros2_ws/install/my_py_pkg:/opt/ros/foxy /usr/bin/cmake --build /home/redi/ros2_ws/build/catch_turtles -- -j8 -l8
